{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Slider.js","panels/ListUsers.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","Slider","useState","slideIndex","setSlideIndex","slideWidth","align","style","height","backgroundColor","console","log","ListUsers","App","activePanel","setActivePanel","setUser","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7e1f920e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tк Персику\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t\t<Group title=\"Slider\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"slider\">\n\t\t\t\t\tСлайдер\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery';\n\n\nconst Slider = ({id, go}) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n\n    // useEffect(() => {\n    //     // document.title = `Вы нажали ${count} раз`;\n    //     return () => (\n    //         setSlideIndex(slideIndex === 2 ? slideIndex === 0 : slideIndex + 1)\n    //     )\n    // });\n\n\t  function showSlide () {\n\t\t setSlideIndex(slideIndex === 2 ? 0 : slideIndex + 1);\n\t\t  console.log(slideIndex);\n\t}\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Example</PanelHeader>\n            <Group title=\"Controled\">\n                <Gallery\n                    slideWidth=\"90%\"\n                    align=\"center\"\n                    style={{height: 150}}\n                    slideIndex={slideIndex}\n                    // onChange={slideIndex => setSlideIndex({slideIndex})} // если раскоментить то слайдер не работает\n                >\n                    <div style={{backgroundColor: 'var(--destructive)'}}/>\n                    <div style={{backgroundColor: 'var(--button_commerce_background)'}}/>\n                    <div style={{backgroundColor: 'var(--accent)'}}/>\n                </Gallery>\n                <Div>\n                    {/*<Button onClick={() => setSlideIndex(slideIndex === 2 ? 0 : slideIndex + 1)}>Next slide</Button>*/}\n\t\t\t\t\t<Button onClick={showSlide}>Next slide</Button>\n                </Div>\n\t\t\t\t{slideIndex === 2\n\t\t\t\t\t?\n\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"list\">\n\t\t\t\t\t\tПопасть в ТОП\n\t\t\t\t\t</Button>\n\t\t\t\t\t:\n\t\t\t\t\t''\n\t\t\t\t}\n            </Group>\n        </Panel>\n\n    );\n};\n\n\nexport default Slider;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery';\nimport List from '@vkontakte/vkui/dist/components/List/List';\n\n\nconst ListUsers = ({id, go}) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n\n    // useEffect(() => {\n    //     // document.title = `Вы нажали ${count} раз`;\n    //     return () => (\n    //         setSlideIndex(slideIndex === 2 ? slideIndex === 0 : slideIndex + 1)\n    //     )\n    // });\n\n\t  function showSlide () {\n\t\t setSlideIndex(slideIndex === 2 ? 0 : slideIndex + 1);\n\t\t  console.log(slideIndex);\n\t}\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Example</PanelHeader>\n            <Group title=\"default\" description=\"Дефолтный стиль аватарки. Используется для юзеров, групп.\">\n                <List>\n                    <Cell before={<Avatar src=\"https://pp.userapi.com/c625316/v625316293/347b7/DmD1VKYbwwI.jpg?ava=1\" />}>Евгений Авсиевич</Cell>\n                    <Cell before={<Avatar src=\"https://pp.userapi.com/c636327/v636327034/2be85/gt3uFFWTw-w.jpg?ava=1\" />}>Татьяна Плуталова</Cell>\n                    <Cell before={<Avatar src=\"https://pp.userapi.com/c841629/v841629884/290ab/STZCXV5wZbg.jpg?ava=1\" />}>Олег Илларианов</Cell>\n                </List>\n            </Group>\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"home\">\n                        Справка\n                    </Button>\n                </Div>\n            </Group>\n        </Panel>\n\n\n    );\n};\n\n\n\nexport default ListUsers;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n// import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Slider from './panels/Slider';\nimport ListUsers from './panels/ListUsers';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\t// const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tconsole.log(\"VKWebAppGetUserInfo: \",user);\n\t\t\t// setPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t// {/*<View activePanel={activePanel} popout={popout}>*/}\n\treturn (\n\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Slider id='slider' go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<ListUsers id='list' go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}