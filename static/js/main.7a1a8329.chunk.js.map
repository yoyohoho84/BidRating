{"version":3,"sources":["panels/ListItem.js","panels/ListGroup.js","panels/Vkpay.js","panels/ListMain.js","panels/Home.js","helpers/requestMethod.js","App.js","index.js"],"names":["ListItem","idItem","first_name","last_name","avatar","price","pay","idVk","getPlatform","urlUser","top","big","className","before","src","href","description","id","level","onClick","ListGroup","name","go","idVkGroup","urlGroup","cascade","data-to","Vkpay","onChangeHandlerInput","reg","payGroups","hadResponse","input","networkStatus","updateConnection","inputVkpayValue","empty","countClickPayGroup","targetIdGroup","priceIdGroup","theme","left","align","onChange","value","status","bottom","size","ListMain","goPage","tabUsers","tabGroups","activeTab","dataUsers","test","dataGroups","story","addGroup","renderUsers","map","item","key","id_vk","renderGroups","id_group","noShadow","vertical","selected","stretched","Home","slide","fetchToken","fetchedUser","idUsers","statusToken","closePopout","goSlide","right","requestMethod","method","$_GET","window","location","search","replace","split","reduce","p","e","a","decodeURIComponent","axios","defaults","params","App","useState","activePanel","setActivePanel","setUser","setIdUsers","paymentStatus","setPaymentStatus","setActiveTab","setInput","setDataUsers","setDataGroups","setReg","setHadResponse","setTargetIdGroup","setPriceIdGroup","setGetPlatform","setNetworkStatus","useNavigatorOnline","isOnline","isOffline","setInputVkpayValue","setSlide","navigator","onLine","async","preventDefault","targetId","currentTarget","priceId","order","get","console","error","connect","sendPromise","then","res","result","du","data","catch","log","useEffect","addEventListener","response","users","groups","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","platform","user","idUser","fetchData","activePan","dataset","to","history","pushState","panel","isWebView","onSwipeBack","scrollTo","send","target","trim","regPublic","regGroup","regClub","regValue1","regValue2","valueSlice1","slice","valueSlice2","slicePublic1","slicePublic2","sliceGroup1","sliceGroup2","sliceClub1","sliceClub2","regValuePublic","regValuePublic2","regValueGroup","regValueGroup2","regValueClub","regValueClub2","inputValue","gu","root","getElementById","mVKMiniAppsScrollHelper","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a1a8329.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\r\nimport styles from \"./ListUsers.sass\";\r\nimport Slide from 'react-reveal/Slide';\r\n\r\nconst ListItem = ({idItem, first_name, last_name, avatar, price, pay, idVk, getPlatform}) => {\r\n    const urlUser = 'https://vk.com/id' + idVk;\r\n    return (\r\n        <Slide top big>\r\n\r\n\r\n            <Div className='div'>\r\n                <span className='listNumber'>{idItem}</span>\r\n\r\n                {getPlatform === \"ios\"\r\n                    ?\r\n                    <Cell\r\n                        className='listName'\r\n                        before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                        href={idVk === 0 ? '' : urlUser}\r\n                    >\r\n                        {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n                    </Cell>\r\n                    :\r\n                    <>\r\n                        {idVk === 0\r\n                            ?\r\n                            <Cell\r\n                                className='listName'\r\n                                before={avatar ? <Avatar src={avatar}/> :\r\n                                    <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                                description={'Цена: ' + price + ' руб'}\r\n\r\n                            >\r\n                                {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n                            </Cell>\r\n                            :\r\n                            <Link href={urlUser}\r\n                            >\r\n                                <Cell\r\n                                    className='listName'\r\n                                    before={avatar ? <Avatar src={avatar}/> :\r\n                                        <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                                    description={'Цена: ' + price + ' руб'}\r\n\r\n                                >\r\n                                    {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n                                </Cell>\r\n                            </Link>\r\n                        }\r\n                    </>\r\n                }\r\n\r\n\r\n                {getPlatform === \"ios\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Button id={idItem} className='button' level=\"commerce\" onClick={pay}>\r\n                        Занять\r\n                    </Button>\r\n                }\r\n            </Div>\r\n        </Slide>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n\r\n","import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\r\nimport Slide from 'react-reveal/Slide';\r\nimport styles from \"./ListUsers.sass\";\r\n\r\nconst ListGroup = ({idItem, avatar, price, name, go, idVkGroup, getPlatform}) => {\r\n\r\n    const urlGroup = 'https://vk.com/club' + idVkGroup;\r\n\r\n    return (\r\n        <Slide top big cascade>\r\n            <Div className='div'>\r\n                <span className='listNumber'>{idItem}</span>\r\n\r\n                {getPlatform === \"ios\"\r\n                    ?\r\n                    <Cell\r\n                        className='listName'\r\n                        before={avatar ? <Avatar src={avatar}/> :\r\n                            <Avatar src='https://vk.com/images/community_200.png'/>}\r\n                        href={idVkGroup === 0 ? '' : urlGroup}\r\n                    >\r\n                        {name ? name : \"Место для группы\"}\r\n                    </Cell>\r\n                    :\r\n\r\n                    <>\r\n                        {idVkGroup === 0\r\n                            ?\r\n                            <Cell\r\n                                className='listName no_background'\r\n                                before={avatar ? <Avatar src={avatar}/> :\r\n                                    <Avatar src='https://vk.com/images/community_200.png'/>}\r\n                                description={'Цена: ' + price + ' руб'}\r\n                            >\r\n                                {name ? name : \"Место для группы\"}\r\n\r\n\r\n                            </Cell>\r\n                            :\r\n                            <Link href={urlGroup}>\r\n                                <Cell\r\n                                    className='listName no_background'\r\n                                    before={avatar ? <Avatar src={avatar}/> :\r\n                                        <Avatar src='https://vk.com/images/community_200.png'/>}\r\n                                    description={'Цена: ' + price + ' руб'}\r\n\r\n                                >\r\n                                    {name ? name : \"Место для группы\"}\r\n                                </Cell>\r\n                            </Link>\r\n                        }\r\n                    </>\r\n                }\r\n\r\n                {getPlatform === \"ios\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Button id={idItem} className='button' level=\"commerce\" onClick={go} data-to=\"vkpay\">\r\n                        Занять\r\n                    </Button>\r\n                }\r\n            </Div>\r\n        </Slide>\r\n    );\r\n};\r\n\r\nexport default ListGroup;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\r\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\r\nimport Link from \"@vkontakte/vkui/dist/components/Link/Link\";\r\n\r\nimport styles from \"../styles/custom-styles.sass\";\r\n\r\nconst Vkpay = ({ id, go, onChangeHandlerInput, reg, payGroups, hadResponse, input, networkStatus,\r\n    updateConnection, inputVkpayValue, countClickPayGroup, targetIdGroup, priceIdGroup }) => {\r\n\r\n    const empty = input === '';\r\n\r\n    return (\r\n        <Panel id={id} theme=\"white\">\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"list\" />}\r\n            >Оплата\r\n            </PanelHeader>\r\n            {networkStatus\r\n                ?\r\n                <Div className=\"divSpinner\">\r\n                    <Div>\r\n                        Отсутствует интернет - соединение!\r\n                    </Div>\r\n                    <CellButton\r\n                        className=\"navigator\"\r\n                        onClick={updateConnection}\r\n                        align={\"center\"}\r\n                    >\r\n                        Повторить\r\n                    </CellButton>\r\n                </Div>\r\n                :\r\n                <Div>\r\n                    <Div>Оплата через VK Pay</Div>\r\n                    <FormLayout>\r\n                        <Input\r\n                            top=\"Введите ссылку на группу\"\r\n                            onChange={onChangeHandlerInput}\r\n                            value={inputVkpayValue}\r\n                            status={empty ? '' : !hadResponse ? '' : reg ? 'valid' : 'error'}\r\n                            bottom={empty ? '' : !hadResponse ? '' : reg ? 'Ссылка на группу введена верно!' : 'Ссылка введена неверно'}\r\n                        >\r\n                        </Input>\r\n\r\n                        {/*<Link href={`https://vk.me/public190534237?ref=${refName}&ref_source=${ref_sourceName}`} target=\"_blank\">/}*/}\r\n\r\n                        {/*<Link href=\"https://vk.com/kirill_1131\" target=\"_blank\">*/}\r\n                        {/*<Button*/}\r\n                        {/*level=\"commerce\"*/}\r\n                        {/*size=\"xl\"*/}\r\n                        {/*stretched*/}\r\n                        {/*>*/}\r\n                        {/*ДиМа*/}\r\n                        {/*</Button>*/}\r\n                        {/*</Link>*/}\r\n\r\n\r\n                        {/*<Link href={`https://vk.me/public190534237?ref=${targetIdGroup}a246b8bcf3${input}&ref_source=${priceIdGroup}`} target=\"_blank\">*/}\r\n                        {/*<Button*/}\r\n                        {/*level=\"commerce\"*/}\r\n                        {/*size=\"xl\"*/}\r\n                        {/*stretched*/}\r\n                        {/*>*/}\r\n                        {/*Добавить*/}\r\n                        {/*</Button>*/}\r\n                        {/*</Link>*/}\r\n\r\n\r\n                        {/* {countClickPayGroup === 1\r\n                            ?\r\n                            <Button size=\"xl\">\r\n                                Оплатить\r\n                            </Button>\r\n                            :\r\n                            \r\n                        } */}\r\n\r\n                        <Button size=\"xl\" onClick={payGroups}>\r\n                            Оплатить\r\n                            </Button>\r\n\r\n\r\n                    </FormLayout>\r\n                </Div>\r\n            }\r\n\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Vkpay;\r\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport {useNavigatorOnline} from '@oieduardorabelo/use-navigator-online';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport styles from \"../styles/custom-styles.sass\";\n\n\nimport ListItem from './ListItem';\nimport ListGroup from './ListGroup';\nimport PanelHeaderBack from \"./Vkpay\";\n\nconst ListMain = ({\n                      id, go, goPage, pay, tabUsers, tabGroups, activeTab, dataUsers, test, dataGroups,\n                      getPlatform, networkStatus, updateConnection, story, addGroup\n                  }) => {\n\n    const renderUsers = dataUsers.map(item => {\n        return (\n            <ListItem\n                key={item.id}\n                idItem={item.id}\n                idVk={item.id_vk}\n                avatar={item.avatar}\n                price={item.price}\n                pay={pay}\n                first_name={item.first_name}\n                last_name={item.last_name}\n                test={test}\n                getPlatform={getPlatform}\n            />\n        );\n    });\n\n    const renderGroups = dataGroups.map(item => {\n        return (\n            <ListGroup\n                key={item.id}\n                idItem={item.id}\n                avatar={item.avatar}\n                price={item.price}\n                go={go}\n                name={item.name}\n                idVkGroup={item.id_group}\n                getPlatform={getPlatform}\n            />\n        );\n    });\n\n    return (\n        <Panel id={id}>\n            <PanelHeader noShadow={true}>\n                Рейтинг лидеров\n            </PanelHeader>\n            <FixedLayout vertical=\"top\">\n                {/*<Group>*/}\n                <Tabs className=\"TabsDefaultUser\">\n                    <TabsItem\n                        onClick={tabGroups}\n                        selected={activeTab === 'groups'}\n                    >\n                        Сообщества\n                    </TabsItem>\n                    <TabsItem\n                        onClick={tabUsers}\n                        selected={activeTab === 'users'}\n                    >\n                        Люди\n                    </TabsItem>\n                </Tabs>\n\n                {/*</Group>*/}\n            </FixedLayout>\n\n\n            {networkStatus\n                ?\n                <Div className=\"divSpinner\">\n                    <Div className=\"navigatorDiv\">\n                        Отсутствует интернет - соединение!\n                    </Div>\n                    <CellButton\n                        className=\"navigator\"\n                        onClick={updateConnection}\n                        align={\"center\"}\n                    >Повторить\n                    </CellButton>\n                </Div>\n                :\n                <>\n\n                    {activeTab === 'users'\n                        ?\n                        <Div className=\"divHeader\">\n                            {getPlatform === \"ios\"\n                                ?\n                                <Group>\n                                    <Div>\n                                        Данный сервис не работает на устройствах с системой iOS\n                                    </Div>\n                                </Group>\n\n                                :\n                                \"\"\n                            }\n\n                            <Group className=\"groupButton\">\n                                {getPlatform === \"ios\"\n                                    ?\n                                    \"\"\n                                    :\n                                    <Button\n                                        className=\"buttonStory\"\n                                        onClick={goPage}\n                                        data-to=\"home\"\n                                        size=\"xl\"\n                                        stretched\n                                    >\n                                        Как это работает ?\n                                    </Button>\n\n                                }\n                                <Button\n                                    className=\"buttonStory\"\n                                    level=\"secondary\"\n                                    onClick={story}\n                                    size=\"xl\"\n                                    stretched\n                                >\n                                    Поделиться в истории\n                                </Button>\n                                <Button\n                                    className=\"buttonAddGroup\"\n                                    level=\"commerce\"\n                                    onClick={addGroup}\n                                    size=\"xl\"\n                                    stretched\n                                >\n                                    Подписаться на нашу группу\n                                </Button>\n                            </Group>\n\n\n                            <List>\n                                {renderUsers}\n                            </List>\n\n                        </Div>\n                        :\n                        ''\n                    }\n\n                    {activeTab === 'groups'\n                        ?\n                        <Div className=\"divHeader\">\n                            {getPlatform === \"ios\"\n                                ?\n                                <Group>\n                                    <Div>\n                                        Данный сервис не работает на устройствах с системой iOS\n                                    </Div>\n                                </Group>\n                                :\n                                \"\"\n                            }\n\n\n                            <Group className=\"groupButton\">\n                                {getPlatform === \"ios\"\n                                    ?\n                                    \"\"\n                                    :\n                                    <Button\n                                        className=\"buttonStory\"\n                                        onClick={goPage}\n                                        data-to=\"home\"\n                                        size=\"xl\"\n                                        stretched\n                                    >\n                                        Как это работает ?\n                                    </Button>\n\n                                }\n\n                                {/*<Button*/}\n                                {/*className=\"buttonStory\"*/}\n                                {/*onClick={goPage}*/}\n                                {/*data-to=\"home\"*/}\n                                {/*size=\"xl\"*/}\n                                {/*stretched*/}\n                                {/*>*/}\n                                {/*Как это работает ?*/}\n                                {/*</Button>*/}\n\n\n                                <Button\n                                    className=\"buttonStory\"\n                                    level=\"secondary\"\n                                    onClick={story}\n                                    size=\"xl\"\n                                    stretched\n                                >\n                                    Поделиться в истории\n                                </Button>\n                                <Button\n                                    className=\"buttonAddGroup\"\n                                    level=\"commerce\"\n                                    onClick={addGroup}\n                                    size=\"xl\"\n                                    stretched\n                                >\n                                    Подписаться на нашу группу\n                                </Button>\n                            </Group>\n\n                            <List>\n                                {renderGroups}\n                            </List>\n                        </Div>\n                        :\n                        ''\n                    }\n                </>\n            }\n\n        </Panel>\n    );\n};\nListMain.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default ListMain;\n\n\n","import React, {useState, useEffect} from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\n// import styles from \"./ListUsers.sass\";\r\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\r\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\r\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\r\nimport UsersStack from \"@vkontakte/vkui/dist/components/UsersStack/UsersStack\";\r\nimport Gallery from \"@vkontakte/vkui/dist/components/Gallery/Gallery\";\r\nimport Slide from 'react-reveal/Slide';\r\nimport styles from \"../styles/custom-styles.sass\";\r\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\r\n\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\n// import CellButton from \"./ListMain\";\r\n// import PanelHeaderBack from \"./Vkpay\";\r\n\r\n\r\nconst Home = ({id, goPage, fetchToken, fetchedUser, idUsers, statusToken, closePopout, slide, goSlide, networkStatus, updateConnection}) => {\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goPage} data-to=\"list\"/>}>\r\n                Как это работает ?\r\n            </PanelHeader>\r\n\r\n\r\n            {networkStatus\r\n                ?\r\n                <Div className=\"divSpinner\">\r\n                    <Div className=\"navigatorDiv\">\r\n                        Отсутствует интернет - соединение!\r\n                    </Div>\r\n                    <CellButton\r\n                        className=\"navigator\"\r\n                        onClick={updateConnection}\r\n                        align={\"center\"}\r\n                    >Повторить\r\n                    </CellButton>\r\n                </Div>\r\n                :\r\n                <>\r\n\r\n                    <Group>\r\n                        {slide === 0\r\n                            ?\r\n                            <Slide right>\r\n                                <Div className=\"divSlide\">\r\n                                    <Div className=\"bold\">\r\n                                        Шаг 1\r\n                                    </Div>\r\n                                    <Div className=\"bold\">\r\n                                        Выбрать место и нажать кнопку \"Занять\"\r\n                                    </Div>\r\n                                    <Div className=\"divUsersStack1\">\r\n                                    </Div>\r\n                                </Div>\r\n                            </Slide>\r\n                            :\r\n                            \"\"\r\n                        }\r\n\r\n\r\n                        {slide === 1\r\n                            ?\r\n                            <Slide right>\r\n                                <Div className=\"divSlide\">\r\n                                    <Div className=\"bold\">\r\n                                        Шаг 2\r\n                                    </Div>\r\n                                    <Div className=\"bold\">\r\n                                        Вставить ссылку и нажать кнопку \"Оплатить\"\r\n                                    </Div>\r\n                                    <Div className=\"divUsersStack2\">\r\n                                    </Div>\r\n                                </Div>\r\n                            </Slide>\r\n                            :\r\n                            \"\"\r\n                        }\r\n\r\n                        {slide === 2\r\n                            ?\r\n                            <Slide right>\r\n                                <Div className=\"divSlide\">\r\n                                    <Div className=\"bold\">\r\n                                        Шаг 3\r\n                                    </Div>\r\n                                    <Div className=\"bold\">\r\n                                        Завершить оплату через платежную систему VK Pay\r\n                                    </Div>\r\n                                    <Div className=\"divUsersStack3\">\r\n                                    </Div>\r\n                                </Div>\r\n                            </Slide>\r\n                            :\r\n                            \"\"\r\n                        }\r\n\r\n                        <Div className=\"divSlide\">\r\n                            <Button level=\"primary\" onClick={goSlide}>\r\n                                Далее\r\n                            </Button>\r\n                    </Div>\r\n\r\n                    </Group>\r\n                    <Slide right>\r\n                        <Div>\r\n                            <Button level=\"commerce\" size=\"xl\" onClick={goPage} data-to=\"list\">\r\n                                Начать !\r\n                            </Button>\r\n                        </Div>\r\n                    </Slide>\r\n                </>\r\n            }\r\n\r\n\r\n        </Panel>\r\n    );\r\n};\r\nexport default Home;\r\n","function requestMethod(method) {\r\n    return \"https://rating01.ru/api/\" + method;\r\n    // return \"https://rating.local/api/\" + method;\r\n}\r\n\r\nexport default requestMethod;","import React, {useState, useEffect} from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from \"axios\";\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport ListMain from './panels/ListMain';\nimport Vkpay from './panels/Vkpay';\nimport Home from './panels/Home';\nimport requestMethod from './helpers/requestMethod';\nimport {useNavigatorOnline} from '@oieduardorabelo/use-navigator-online';\n\n\nlet $_GET = window\n    .location\n    .search\n    .replace('?', '')\n    .split('&')\n    .reduce(\n        function (p, e) {\n            let a = e.split('=');\n            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n            return p;\n        },\n        {}\n    );\n\naxios.defaults.params = {\n    ...$_GET\n};\n\nfunction getNewRequestId() {\n    if (process.env.NODE_ENV === 'production') {\n        return (Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)).toString();\n    } else {\n        return \"111\"\n    }\n}\n\nexport function apiRequest(method, params = {}, accessToken = '', successCallback = undefined, errorCallback = undefined) {\n    let requestId = getNewRequestId();\n    if (successCallback !== undefined || errorCallback !== undefined) {\n        let clb = function callback(e) {\n            let vkEvent = e.detail;\n            if (!vkEvent) {\n                // console.error('invalid event', e);\n                return;\n            }\n\n            let type = vkEvent['type'];\n            let data = vkEvent['data'];\n\n            let found = false;\n            if ('VKWebAppCallAPIMethodResult' === type && data['request_id'] === requestId) {\n                if (successCallback !== undefined) {\n                    successCallback(data['response']);\n                }\n                found = true;\n            } else if ('VKWebAppCallAPIMethodFailed' === type && data['request_id'] === requestId) {\n                if (errorCallback !== undefined) {\n                    errorCallback(data);\n                }\n                found = true;\n            }\n            if (found) {\n                connect.unsubscribe(clb);\n            }\n        };\n        connect.subscribe(clb);\n    }\n\n    params['access_token'] = accessToken;\n\n    if (params['v'] === undefined) {\n        params['v'] = 5.103;\n    }\n\n    connect.send('VKWebAppCallAPIMethod', {\n        'method': method,\n        'params': params,\n        'request_id': requestId\n    });\n}\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('list');\n    const [fetchedUser, setUser] = useState(null);\n    const [idUsers, setIdUsers] = useState(0);\n    const [paymentStatus, setPaymentStatus] = useState(false);\n    const [activeTab, setActiveTab] = useState('groups');\n    const [input, setInput] = useState('');\n    const [dataUsers, setDataUsers] = useState([]);\n    const [dataGroups, setDataGroups] = useState([]);\n    // const [token, setToken] = useState(null);\n    // const [statusToken, setStatusToken] = useState(true);\n    const [reg, setReg] = useState();\n    const [hadResponse, setHadResponse] = useState(false);\n    const [targetIdGroup, setTargetIdGroup] = useState(0);\n    const [priceIdGroup, setPriceIdGroup] = useState(0);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [getPlatform, setGetPlatform] = useState(\"\");\n    const [history, setHistory] = useState(['list']);\n    const [networkStatus, setNetworkStatus] = useState(false);\n    let {isOnline, isOffline} = useNavigatorOnline();\n    const [inputVkpayValue, setInputVkpayValue] = useState('');\n    const [countClickPayGroup, setCountClickPayGroup] = useState(0);\n    const [slide, setSlide] = useState(0);\n\n    const navigator = window.navigator.onLine;\n\n    // const refreshValue = () => {\n    //     setInputVkpayValue('');\n    // };\n\n\n    const updateConnection = () => {\n        const navigator = window.navigator.onLine;\n        if (!navigator) {\n            setNetworkStatus(true);\n            setInputVkpayValue('');\n            // console.log(\"checkNetworkStatus\", navigator);\n        } else {\n            setNetworkStatus(false);\n            // console.log(\"checkNetworkStatus\", navigator);\n        }\n    };\n\n    useEffect(() => {\n        if (!navigator) {\n            setNetworkStatus(true);\n            setInputVkpayValue('');\n            console.log(\"checkNetworkStatus\", navigator);\n        } else {\n            setNetworkStatus(false);\n            console.log(\"checkNetworkStatus\", navigator);\n        }\n    });\n\n\n    useEffect(() => {\n        window.addEventListener('popstate', e => e.preventDefault() & menu(e));\n    }, []);\n\n    function menu(e) {\n        setActivePanel('list');\n        setInput('');\n        setInputVkpayValue('');\n    }\n\n    useEffect(() => {\n        axios.get(requestMethod(\"sys.first\"), {})\n            .then(res => {\n                if (res.data.error) { // вывод ошибки если пришли неполные данные\n                    console.log('ОШИБКА ДАННЫХ ГРУПП:', res.data.error);\n                    return;\n                }\n\n                // console.log(res);\n\n                setDataUsers(res.data.response.users);\n                setDataGroups(res.data.response.groups);\n\n            }).catch(error => {\n            console.log(error);\n        });\n    }, []);\n\n\n    useEffect(() => {\n        connect.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        connect.sendPromise('VKWebAppGetClientVersion',\n        ).then(res => {\n            // console.log(\"ВЕРСИЯ ПРИЛОЖЕНИЯ:\", res);\n            if (res.platform === \"ios\") {\n                setGetPlatform(\"ios\");\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n            const idUser = user.id;\n            setIdUsers(idUser);\n            // setPopout(null);\n        }\n\n        // connect.sendPromise('VKWebAppStorageGet',\n        //     {\n        //         'keys': ['ActiveTab', 'activePanel', 'button']\n        //     })\n        //     .then((res) => {\n        //         setActiveTab(res.keys[0].value);\n        //         // console.log('setActivePanel: ', res.keys[1].value);\n        //     })\n        //     .catch((error) => {\n        //         setActiveTab('users');\n        //         console.log(error);\n        //     });\n\n        fetchData();\n    }, []);\n\n    async function pay(e) {\n        e.preventDefault();\n        const targetId = e.currentTarget.id - 1;\n        const targetIdVk = fetchedUser.id;\n        const priceId = dataUsers[targetId]['price'];\n\n        let order = {};\n        try {\n            order = await axios.get(requestMethod(\"list.addOrderUser\"), {\n                params: {\n                    id: targetId + 1\n                }\n            });\n        } catch (error) {\n            console.error(error);\n        }\n\n        connect.sendPromise('VKWebAppOpenPayForm', {\n            \"app_id\": 7217737,\n            \"action\": \"pay-to-group\",\n            \"params\": {\n                \"amount\": priceId,\n                \"group_id\": 189974647  // 189804850  // 189974647\n            }\n        }).then(res => {\n            // console.log('RES_USERS:', res);\n            if (res.status || res.result.status) {\n                setPaymentStatus(true);\n                setActivePanel('list');\n\n                let du = [...dataUsers];\n                du[targetId] = {\n                    ...du[targetId],\n                    'id_vk': fetchedUser['id'],\n                    'first_name': fetchedUser['first_name'],\n                    'last_name': fetchedUser['last_name'],\n                    'avatar': fetchedUser['photo_200'],\n                    'price': order.data['response']['price']\n                };\n                setDataUsers(du);\n            }\n            // console.log(res.status); // работает\n        }).catch(error => {\n            console.log(error);\n\n        });\n    }\n\n    async function payGroups(e) {\n        console.log(\"ВЫЗВАЛИ ФУНКЦИЮ\");\n        console.log(\"ВЫЗВАЛИ ФУНКЦИЮ reg:\", reg);\n        e.preventDefault();\n        // setCountClickPayGroup(1);\n        const inputValue = input;\n        setHadResponse(true);\n\n        axios.get(requestMethod(\"sys.checkGroupNew\"), {\n            params: {\n                id_group: inputValue\n            }\n        }).then(async res => {\n            console.log(\"sys.checkGroup1\", res);\n\n            if (res.data.error) { // вывод ошибки если пришли неполные данные\n                console.log(\"ОШИБКА ДАННЫХ ГРУППЫ:\", res.data.error);\n                // setCountClickPayGroup(0);\n                setReg(false);\n                console.log(\"ОШИБКА ДАННЫХ ГРУППЫ reg:\", reg);\n                return;\n            } else {\n                console.log(\"then reg:\", reg);\n                setReg(true);\n            }\n\n            let order = {};\n            try {\n                order = await axios.get(requestMethod(\"list.addOrderGroup\"), {\n                    params: {\n                        id: targetIdGroup + 1,\n                        id_group: res.data.response.id\n                    }\n                });\n            } catch (error) {\n                console.error(error);\n            }\n\n\n            connect.sendPromise('VKWebAppOpenPayForm', {\n                \"app_id\": 7217737,\n                \"action\": \"pay-to-group\",\n                \"params\": {\n                    \"amount\": priceIdGroup,\n                    \"group_id\": 189974647,   // 189974647\n                    \"data\": {\n                        \"my_sign\": \"dsfdsffds\"\n                    },\n                    \"sign\": \"sadsaas\"\n                }\n            }).then(res => {\n                if (res.status || res.result.status) {\n                    setPaymentStatus(true);\n                    // setCountClickPayGroup(0);\n                    let gu = [...dataGroups];\n                    gu[targetIdGroup] = {\n                        ...gu[targetIdGroup],\n                        'id_group': inputValue,\n                        'name': order.data['response']['group']['name'],\n                        'avatar': order.data['response']['group']['photo_200'],\n                        'price': order.data['response']['price']\n                    };\n\n                    setDataGroups(gu);\n                    setActivePanel('list');\n                    setInputVkpayValue('');\n                }\n                console.log(res.status); // работает\n            }).catch(error => {\n                // setCountClickPayGroup(0);\n                console.log(\"catch error:\", error);\n                console.log(\"countClickPayGroup:\", countClickPayGroup);\n                setInput('');\n                setInputVkpayValue('');\n                // setReg(false);\n                setHadResponse(false);\n            });\n\n        }).catch(error => {\n            // setCountClickPayGroup(0);\n            console.log(\"catch countClickPayGroup:\", countClickPayGroup);\n            console.log(error);\n        });\n\n    }\n\n\n    async function tabUsers() {\n        // connect.sendPromise(\"VKWebAppStorageSet\",\n        //     {\n        //         \"key\": \"ActiveTab\",\n        //         \"value\": \"users\"\n        //     })\n        //     .then(() => {\n        //\n        //         // connect.sendPromise('VKWebAppStorageGet',\n        //         //     {\n        //         //         'keys': ['ActiveTab']\n        //         //     })\n        //         //     .then((res) => {\n        //         //         setActiveTab(res.keys[0].value);\n        //         //     })\n        //         //     .catch((error) => {\n        //         //         console.log(error);\n        //         //     });\n        //     })\n        //     .catch((error) => {\n        //         console.log(error);\n        //     });\n        setActiveTab(\"users\");\n        window.scrollTo(0, 0);\n    }\n\n    async function tabGroups() {\n        // connect.sendPromise(\"VKWebAppStorageSet\",\n        //     {\n        //         \"key\": \"ActiveTab\",\n        //         \"value\": \"groups\"\n        //     })\n        //     .then(() => {\n        //\n        //         // connect.sendPromise('VKWebAppStorageGet',\n        //         //     {\n        //         //         'keys': ['ActiveTab']\n        //         //     })\n        //         //     .then((res) => {\n        //         //         setActiveTab(res.keys[0].value);\n        //         //     })\n        //         //     .catch((error) => {\n        //         //         console.log(error);\n        //         //     });\n        //     })\n        //     .catch((error) => {\n        //         console.log(error);\n        //     });\n        setActiveTab(\"groups\");\n        window.scrollTo(0, 0);\n    }\n\n    const go = e => {\n        e.preventDefault();\n        const activePan = e.currentTarget.dataset.to;\n        setActivePanel(activePan);\n        // setReg(false);\n        window.history.pushState({panel: e.currentTarget.dataset.to}, `${e.currentTarget.dataset.to}`);\n\n        let id = e.currentTarget.id - 1;\n        setTargetIdGroup(id);\n        setPriceIdGroup(dataGroups[id]['price']);\n        setInput('');\n        setInputVkpayValue('');\n    };\n\n    const goPage = e => {\n        e.preventDefault();\n        const activePan = e.currentTarget.dataset.to;\n        setActivePanel(activePan);\n        window.history.pushState({panel: e.currentTarget.dataset.to}, `${e.currentTarget.dataset.to}`);\n\n    };\n\n    const goBack = () => {\n        setActivePanel('list');\n    };\n\n\n    function story() {\n        let url = \"https://vk.com/app7217737\";\n        connect.sendPromise('VKWebAppShowStoryBox', {\n            \"background_type\": \"image\",\n            \"url\": \"https://sun9-46.userapi.com/c858420/v858420898/15fd9d/D1QfPFbKYCA.jpg\",\n            \"attachment\": {\n                \"text\": \"Стать лидером? Может каждый!\",\n                \"type\": \"url\",\n                \"url\": url\n            }\n        }).then(res => {\n            console.log(\"story res:\", res); // работает\n        }).catch(error => {\n            console.log(\"story error:\", error);\n        });\n    }\n\n    function addGroup() {\n        connect.send(\"VKWebAppJoinGroup\", {\"group_id\": 189974647});\n    }\n\n    const goSlide = () => {\n        if (slide <= 1) {\n            setSlide(slide + 1);\n        } else {\n            setSlide(0);\n        }\n\n    };\n\n    function onChangeHandlerInput(e) {\n        const value = e.target.value.trim();\n\n        setInputVkpayValue(value);\n        const reg1 = /^https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*|Https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*$/;\n        const reg2 = /^vk\\.com\\/(?!id\\d)[^\\/]*$/;\n        const regPublic = /^public/;\n        const regGroup = /^group/;\n        const regClub = /^club/;\n\n\n        const regValue1 = reg1.test(value);\n        const regValue2 = reg2.test(value);\n\n\n        const valueSlice1 = value.slice(15);\n        const valueSlice2 = value.slice(7);\n\n        const slicePublic1 = valueSlice1.slice(6);\n        const slicePublic2 = valueSlice2.slice(6);\n        console.log('slicePublic1:', slicePublic1);\n        console.log('slicePublic2:', slicePublic2);\n\n        const sliceGroup1 = valueSlice1.slice(5);\n        const sliceGroup2 = valueSlice2.slice(5);\n\n        const sliceClub1 = valueSlice1.slice(4);\n        const sliceClub2 = valueSlice2.slice(4);\n\n        const regValuePublic = regPublic.test(valueSlice1);\n        const regValuePublic2 = regPublic.test(valueSlice2);\n        console.log('regValuePublic:', regValuePublic);   // выводит список\n        console.log('regValuePublic1:', regValuePublic2);   // выводит список\n\n\n        const regValueGroup = regGroup.test(valueSlice1);\n        const regValueGroup2 = regGroup.test(valueSlice2);\n        console.log('regValueGroup:', regValueGroup);   // выводит список\n        console.log('regValueGroup2:', regValueGroup2);   // выводит список\n\n        const regValueClub = regClub.test(valueSlice1);\n        const regValueClub2 = regClub.test(valueSlice2);\n        console.log('regValueClub:', regValueClub);   // выводит список\n        console.log('regValueClub2:', regValueClub2);   // выводит список\n\n// TODO: СПЕРВА ИЗМЕНИТЬ CHECKgROUPS НА СЕРВЕРА А ПОТОМ ПРОВЕРИТЬ\n\n        if (regValue1) {\n            if (regValuePublic) {\n                setInput(slicePublic1);\n            } else {\n                if (regValueGroup) {\n                    setInput(sliceGroup1);\n                } else {\n                    if (regValueClub) {\n                        setInput(sliceClub1);\n                    } else {\n                        setInput(valueSlice1);\n                    }\n                }\n            }\n\n        } else {\n            if (regValue2) {\n                if (regValuePublic2) {\n                    setInput(slicePublic2);\n                } else {\n                    if (regValueGroup2) {\n                        setInput(sliceGroup2);\n                    } else {\n                        if (regValueClub2) {\n                            setInput(sliceClub2);\n                        } else {\n                            setInput(valueSlice2);\n                        }\n                    }\n                }\n\n            }\n        }\n\n\n        // if (regValue1) {\n        //     setInput(valueSlice1);\n        //     // setReg(true);\n        // } else {\n        //     // setReg(false);\n        //     if (regValue2) {\n        //         setInput(valueSlice2);\n        //         // setReg(true);\n        //     } else {\n        //         // setReg(false);\n        //     }\n        // }\n\n\n        // connect.sendPromise(\"VKWebAppCallAPIMethod\",\n        //     {\n        //         \"method\": \"utils.resolveScreenName\",\n        //         \"request_id\": \"1\",\n        //         \"params\":\n        //             {\n        //                 \"screen_name\": valueSlice,\n        //                 \"v\": \"5.103\",\n        //                 \"access_token\":\n        //             }\n        //     }).then(res => {\n        //     if (res.response.object_id === undefined) {\n        //         setReg(false);\n        //     } else {\n        //         setInput(valueSlice);\n        //         setReg(true);\n        //     }\n        //     console.log(res.response.object_id);\n        // }).catch(error => {\n        //     console.log(error);\n        // });\n\n    }\n\n    return (\n\n\n        <ConfigProvider isWebView={true}>\n            <View activePanel={activePanel}\n                // popout={popout}\n                  onSwipeBack={goBack}\n            >\n\n                <ListMain id='list'\n                          fetchedUser={fetchedUser}\n                          go={go}\n                          goPage={goPage}\n                          pay={pay}\n                          paymentStatus={paymentStatus}\n                          activeTab={activeTab}\n                          tabUsers={tabUsers}\n                          tabGroups={tabGroups}\n                          dataUsers={dataUsers}\n                          dataGroups={dataGroups}\n                          getPlatform={getPlatform}\n                          networkStatus={networkStatus}\n                          updateConnection={updateConnection}\n                          story={story}\n                          addGroup={addGroup}\n                />\n                <Vkpay id='vkpay'\n                       go={go}\n                       pay={pay}\n                       onChangeHandlerInput={onChangeHandlerInput}\n                       reg={reg}\n                       hadResponse={hadResponse}\n                       payGroups={payGroups}\n                       activePanel={activePanel}\n                       input={input}\n                       networkStatus={networkStatus}\n                       updateConnection={updateConnection}\n                       inputVkpayValue={inputVkpayValue}\n                       countClickPayGroup={countClickPayGroup}\n                       targetIdGroup={targetIdGroup}\n                       priceIdGroup={priceIdGroup}\n                />\n                <Home\n                    id='home'\n                    goPage={goPage}\n                    slide={slide}\n                    goSlide={goSlide}\n                    networkStatus={networkStatus}\n                    updateConnection={updateConnection}\n\n                />\n            </View>\n        </ConfigProvider>\n\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\n// Корневой элемент приложения\nconst root = document.getElementById('root');\n\n// Вызываем хелпер, передавая в аргумент корневой элемент приложения\nmVKMiniAppsScrollHelper(root);\n\n// Рендер приложения\nReactDOM.render(<App />, root);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}