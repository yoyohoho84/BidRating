{"version":3,"sources":["panels/ListItem.js","panels/ListGroup.js","panels/ListMain.js","panels/Vkpay.js","helpers/requestMethod.js","App.js","index.js","panels/ListUsers.module.sass"],"names":["ListItem","idItem","first_name","last_name","avatar","price","pay","idVk","urlUser","className","styles","div","listNumber","listName","before","src","description","href","id","button","level","onClick","ListGroup","name","go","idVkGroup","urlGroup","data-to","ListMain","tabUsers","tabGroups","activeTab","dataUsers","test","dataGroups","renderUsers","map","item","key","id_vk","renderGroups","id_group","vertical","theme","type","selected","title","Vkpay","onChangeHandlerInput","reg","payGroups","left","top","onChange","status","bottom","size","requestMethod","method","$_GET","window","location","search","replace","split","reduce","p","e","a","decodeURIComponent","axios","defaults","params","App","useState","activePanel","setActivePanel","fetchedUser","setUser","setIdUsers","paymentStatus","setPaymentStatus","setActiveTab","input","setInput","setDataUsers","setDataGroups","setReg","targetIdGroup","setTargetIdGroup","priceIdGroup","setPriceIdGroup","popout","setPopout","preventDefault","targetId","currentTarget","targetIdVk","priceId","connect","sendPromise","then","res","console","log","result","get","data","error","du","catch","useEffect","response","users","groups","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","keys","async","user","idUser","fetchData","activePan","dataset","to","target","trim","regValue1","regValue2","valueSlice1","slice","valueSlice2","inputValue","gu","send","root","getElementById","mVKMiniAppsScrollHelper","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.9a0ea149.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport styles from \"./ListUsers.module.sass\";\r\n\r\nconst ListItem = ({idItem,first_name,last_name,avatar,price,pay,idVk}) => {\r\nconst urlUser = 'https://vk.com/id' + idVk;\r\n    return (\r\n        <Div className={styles.div}>\r\n            <span className={styles.listNumber}>{idItem}</span>\r\n            <Cell\r\n                className={styles.listName}\r\n                before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                description={'Цена: ' + price + ' руб'}\r\n                href={idVk === 0 ? '' : urlUser}\r\n            >\r\n                {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n            </Cell>\r\n\r\n            <Button id={idItem} className={styles.button} level=\"commerce\" onClick={pay}>\r\n                Занять\r\n            </Button>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport styles from \"./ListUsers.module.sass\";\r\n\r\nconst ListGroup = ({idItem, avatar, price, name, go, idVkGroup}) => {\r\n\r\n    const urlGroup = 'https://vk.com/public' + idVkGroup;\r\n\r\n    return (\r\n        <Div className={styles.div}>\r\n            <span className={styles.listNumber}>{idItem}</span>\r\n            <Cell\r\n                className={styles.listName}\r\n                before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                description={'Цена: ' + price + ' руб'}\r\n                href={idVkGroup === 0 ? '' : urlGroup}\r\n            >\r\n                {name ? name : \"Место для группы\"}\r\n            </Cell>\r\n            <Button id={idItem} className={styles.button} level=\"commerce\" onClick={go} data-to=\"vkpay\">\r\n                Занять\r\n            </Button>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ListGroup;\r\n\r\n\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\nimport ListItem from './ListItem';\nimport ListGroup from './ListGroup';\n\nconst ListMain = ({id, go,pay,tabUsers,tabGroups,activeTab,dataUsers,test,dataGroups}) => {\n    const renderUsers = dataUsers.map(item => {\n        return (\n            <ListItem\n                key={item.id}\n                idItem={item.id}\n                idVk={item.id_vk}\n                avatar={item.avatar}\n                price={item.price}\n                pay={pay}\n                first_name={item.first_name}\n                last_name={item.last_name}\n                test={test}\n            />\n        );\n    });\n\n    const renderGroups = dataGroups.map(item => {\n        return (\n            <ListGroup\n                key={item.id}\n                idItem={item.id}\n                avatar={item.avatar}\n                price={item.price}\n                go={go}\n                name={item.name}\n                idVkGroup={item.id_group}\n\n            />\n        );\n    });\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>\n                Рейтинг лидеров\n            </PanelHeader>\n            <FixedLayout vertical=\"top\">\n                <Tabs theme=\"header\" type=\"buttons\">\n                    <HorizontalScroll>\n                        <TabsItem\n                            onClick={tabUsers}\n                            selected={activeTab === 'users'}\n                        >\n                            Люди\n                        </TabsItem>\n                        <TabsItem\n                            onClick={tabGroups}\n                            selected={activeTab === 'groups'}\n                        >\n                            Сообщества\n                        </TabsItem>\n                    </HorizontalScroll>\n                </Tabs>\n            </FixedLayout>\n\n            {activeTab === 'users'\n                ?\n                <Group title=\"default\"\n                       description=\"Каждое место покупается на 14 дней.При каждой повторной покупке места,\n                       стоимость увеличивается на коэффициент - 1,1 и добавляется + 3 дня к времени пребывания в рейтинге.\n                       Выше стоимость места - длительнее время пребывания в рейтинге.\">\n                    <List>\n                        {renderUsers}\n                    </List>\n                </Group>\n                :\n                ''\n            }\n\n            {activeTab === 'groups'\n                ?\n                <Group title=\"default\"\n                       description=\"Каждое место покупается на 14 дней.При каждой повторной покупке места,\n                       стоимость увеличивается на коэффициент - 1,1 и добавляется + 3 дня к времени пребывания в рейтинге.\n                       Выше стоимость места - длительнее время пребывания в рейтинге.\">\n                    <List>\n                        {renderGroups}\n                    </List>\n                </Group>\n                :\n                ''\n            }\n        </Panel>\n\n\n    );\n};\nListMain.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default ListMain;\n\n\n","import React, {useState, useEffect} from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\r\n\r\nconst Vkpay = ({id,go,onChangeHandlerInput,reg,payGroups}) => {\r\n\r\n    return (\r\n        <Panel id={id} theme=\"white\">\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"list\"/>}\r\n            >Оплата\r\n            </PanelHeader>\r\n            <Div>\r\n                <Div>Оплата через VK Pay</Div>\r\n                <FormLayout>\r\n                    <Input\r\n                        top=\"Введите ссылку на группу\"\r\n                        onChange={onChangeHandlerInput}\r\n                        status={reg ? 'valid' : 'error'}\r\n                        bottom={reg ? 'Ссылка на группу введена верно!' : 'Ссылка введена неверно'}\r\n                    >\r\n                    </Input>\r\n\r\n                    <Button size=\"xl\" onClick={payGroups}>\r\n                        Оплатить\r\n                    </Button>\r\n                </FormLayout>\r\n            </Div>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Vkpay;\r\n","function requestMethod(method) {\r\n    return \"https://rating01.ru/api/\" + method;\r\n    // return \"https://rating.local/api/\" + method;\r\n}\r\n\r\nexport default requestMethod;","import React, {useState, useEffect} from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from \"axios\";\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\nimport ListMain from './panels/ListMain';\nimport Vkpay from './panels/Vkpay';\nimport requestMethod from './helpers/requestMethod';\n\n\nlet $_GET = window\n    .location\n    .search\n    .replace('?', '')\n    .split('&')\n    .reduce(\n        function (p, e) {\n            let a = e.split('=');\n            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n            return p;\n        },\n        {}\n    );\n\naxios.defaults.params = {\n    ...$_GET\n};\n\nfunction getNewRequestId() {\n    if (process.env.NODE_ENV === 'production') {\n        return (Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)).toString();\n    } else {\n        return \"111\"\n    }\n}\n\nexport function apiRequest(method, params = {}, accessToken = '', successCallback = undefined, errorCallback = undefined) {\n    let requestId = getNewRequestId();\n    if (successCallback !== undefined || errorCallback !== undefined) {\n        let clb = function callback(e) {\n            let vkEvent = e.detail;\n            if (!vkEvent) {\n                console.error('invalid event', e);\n                return;\n            }\n\n            let type = vkEvent['type'];\n            let data = vkEvent['data'];\n\n            let found = false;\n            if ('VKWebAppCallAPIMethodResult' === type && data['request_id'] === requestId) {\n                if (successCallback !== undefined) {\n                    successCallback(data['response']);\n                }\n                found = true;\n            } else if ('VKWebAppCallAPIMethodFailed' === type && data['request_id'] === requestId) {\n                if (errorCallback !== undefined) {\n                    errorCallback(data);\n                }\n                found = true;\n            }\n            if (found) {\n                connect.unsubscribe(clb);\n            }\n        };\n        connect.subscribe(clb);\n    }\n\n    params['access_token'] = accessToken;\n\n    if (params['v'] === undefined) {\n        params['v'] = 5.103;\n    }\n\n    connect.send('VKWebAppCallAPIMethod', {\n        'method': method,\n        'params': params,\n        'request_id': requestId\n    });\n}\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('list');\n    const [fetchedUser, setUser] = useState(null);\n    const [idUsers, setIdUsers] = useState(0);\n    const [paymentStatus, setPaymentStatus] = useState(false);\n    const [activeTab, setActiveTab] = useState('users');\n    const [input, setInput] = useState('');\n    const [dataUsers, setDataUsers] = useState([]);\n    const [dataGroups, setDataGroups] = useState([]);\n    // const [token, setToken] = useState(null);\n    // const [statusToken, setStatusToken] = useState(true);\n    const [reg, setReg] = useState();\n    const [targetIdGroup, setTargetIdGroup] = useState(0);\n    const [priceIdGroup, setPriceIdGroup] = useState(0);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\n\n    useEffect(() => {\n        axios.get(requestMethod(\"sys.first\"), {})\n            .then(res => {\n                if (res.data.error) { // вывод ошибки если пришли неполные данные\n                    console.log('ОШИБКА ДАННЫХ ГРУПП:', res.data.error);\n                    return;\n                }\n\n                console.log(res);\n\n                setDataUsers(res.data.response.users);\n                setDataGroups(res.data.response.groups);\n\n            }).catch(error => {\n            console.log(error);\n        });\n    }, []);\n\n\n    useEffect(() => {\n        connect.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n            const idUser = user.id;\n            setIdUsers(idUser);\n            setPopout(null);\n        }\n\n        connect.sendPromise('VKWebAppStorageGet',\n            {\n                'keys': ['ActiveTab', 'activePanel', 'button']\n            })\n            .then((res) => {\n                setActiveTab(res.keys[0].value);\n                // console.log('setActivePanel: ', res.keys[1].value);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        fetchData();\n    }, []);\n\n    function pay(e) {\n        e.preventDefault();\n        const targetId = e.currentTarget.id - 1;\n        const targetIdVk = fetchedUser.id;\n        const priceId = dataUsers[targetId]['price'];\n\n        connect.sendPromise('VKWebAppOpenPayForm', {\n            \"app_id\": 7217737,\n            \"action\": \"pay-to-group\",\n            \"params\": {\n                \"amount\": priceId,\n                \"group_id\": 189974647\n            }\n        }).then(res => {\n            console.log('RES_USERS:', res);\n            if (res.status || res.result.status) {\n                setPaymentStatus(true);\n                console.log('ОПЛАТА ПРОШЛА 1');\n\n                axios.get(requestMethod(\"list.updateUsersList\"), {\n                    params: {\n                        id: targetId + 1,\n                        id_vk: targetIdVk\n                    }\n                }).then(res => {\n                    if (res.data.error) { // вывод ошибки если пришли неполные данные\n                        console.log(res.data.error);\n                        return;\n                    }\n                    console.log('Id_Users_updateUsersList:', targetIdVk);\n                    setActivePanel('list');\n                    console.log('ОПЛАТА ПРОШЛА: 2', dataUsers);   // выводит список\n\n\n                    let du = [...dataUsers];\n                    du[targetId] = {\n                        ...du[targetId],\n                        'id_vk': fetchedUser['id'],\n                        'first_name': fetchedUser['first_name'],\n                        'last_name': fetchedUser['last_name'],\n                        'avatar': fetchedUser['photo_200'],\n                        'price': res.data['response']['price']\n                    };\n                    setDataUsers(du);\n\n                }).catch(error => {\n                    console.log(error);\n                });\n            }\n            console.log(res.status); // работает\n        }).catch(error => {\n            console.log(error);\n\n        });\n    }\n\n    function payGroups(e) {\n        e.preventDefault();\n        const inputValue = input;\n        console.log(\"inputValue\" ,inputValue);\n\n        axios.get(requestMethod(\"sys.checkGroup\"), {\n            params: {\n                id_group: inputValue\n            }\n        }).then(res => {\n            if (res.data.error) { // вывод ошибки если пришли неполные данные\n                console.log(res.data.error);\n                setReg(false);\n                return;\n            }\n\n            setReg(true);\n\n            connect.sendPromise('VKWebAppOpenPayForm', {\n                \"app_id\": 7217737,\n                \"action\": \"pay-to-group\",\n                \"params\": {\n                    \"amount\": priceIdGroup,\n                    \"group_id\": 189974647\n                }\n            }).then(res => {\n                if (res.status || res.result.status) {\n                    setPaymentStatus(true);\n                    console.log('ОПЛАТА ПРОШЛА 1');\n                    axios.get(requestMethod(\"list.updateGroupsList\"), {\n                        params: {\n                            id: targetIdGroup + 1,\n                            id_group: inputValue\n                        }\n                    }).then(res => {\n                        if (res.data.error) { // вывод ошибки если пришли неполные данные\n                            console.log(res.data.error);\n                            return;\n                        }\n                        console.log('Id_Group_updateGroupsList:', input);\n                        setActivePanel('list');\n                        console.log('ОПЛАТА ПРОШЛА: 2', dataGroups);   // выводит список\n\n\n                        let gu = [...dataGroups];\n                        gu[targetIdGroup] = {\n                            ...gu[targetIdGroup],\n                            'id_group': inputValue,\n                            'name': res.data['response']['group']['name'],\n                            'avatar': res.data['response']['group']['photo_200'],\n                            'price': res.data['response']['price']\n                        };\n\n                        setDataGroups(gu);\n\n\n                    }).catch(error => {\n                        console.log(error);\n                    });\n                }\n                console.log(res.status); // работает\n            }).catch(error => {\n                console.log(error);\n            });\n\n        }).catch(error => {\n            console.log(error);\n        });\n\n        // if (reg) {\n        //     // connect.sendPromise('VKWebAppOpenPayForm', {\n        //     //     \"app_id\": 7217737,\n        //     //     \"action\": \"pay-to-group\",\n        //     //     \"params\": {\n        //     //         \"amount\": priceIdGroup,\n        //     //         \"group_id\": 189804850\n        //     //     }\n        //     // }).then(res => {\n        //     //     if (res.status || res.result.status) {\n        //     //         setPaymentStatus(true);\n        //     //         console.log('ОПЛАТА ПРОШЛА 1');\n        //     //         axios.get(requestMethod(\"list.updateGroupsList\"), {\n        //     //             params: {\n        //     //                 id: targetIdGroup + 1,\n        //     //                 id_group: inputValue\n        //     //             }\n        //     //         }).then(res => {\n        //     //             if (res.data.error) { // вывод ошибки если пришли неполные данные\n        //     //                 console.log(res.data.error);\n        //     //                 return;\n        //     //             }\n        //     //             console.log('Id_Group_updateGroupsList:', input);\n        //     //             setActivePanel('list');\n        //     //             console.log('ОПЛАТА ПРОШЛА: 2', dataGroups);   // выводит список\n        //     //\n        //     //\n        //     //         }).catch(error => {\n        //     //             console.log(error);\n        //     //         });\n        //     //         connect.sendPromise(\"VKWebAppCallAPIMethod\",\n        //     //             {\n        //     //                 \"method\": \"groups.getById\",\n        //     //                 \"request_id\": \"1\",\n        //     //                 \"params\":\n        //     //                     {\n        //     //                         \"group_id\": inputValue,\n        //     //                         \"v\": \"5.103\",\n        //     //                         \"access_token\": token\n        //     //                     }\n        //     //             }).then(res => {\n        //     //             console.log('res:', res);\n        //     //             const getNameGroup = res.response[0].name;\n        //     //             const getPhotoGroup = res.response[0].photo_200;\n        //     //\n        //     //             let gu = [...dataGroups];\n        //     //             gu[targetIdGroup] = {\n        //     //                 ...gu[targetIdGroup],\n        //     //                 'id_group': inputValue,\n        //     //                 'name': getNameGroup,\n        //     //                 'avatar': getPhotoGroup,\n        //     //             };\n        //     //             console.log('NAME:', getNameGroup);\n        //     //             console.log('AVATAR:', getPhotoGroup);\n        //     //             console.log('gu:', gu);\n        //     //             setDataGroups(gu);\n        //     //\n        //     //         }).catch(error => {\n        //     //             console.log(error);\n        //     //         });\n        //     //\n        //     //     }\n        //     //     console.log(res.status); // работает\n        //     // }).catch(error => {\n        //     //     console.log(error);\n        //     // });\n        // } else {\n        //     console.log('ссылка на группу - некорректная', reg)\n        // }\n    }\n\n\n    async function tabUsers() {\n        connect.sendPromise(\"VKWebAppStorageSet\",\n            {\n                \"key\": \"ActiveTab\",\n                \"value\": \"users\"\n            })\n            .then(() => {\n                connect.sendPromise('VKWebAppStorageGet',\n                    {\n                        'keys': ['ActiveTab']\n                    })\n                    .then((res) => {\n                        setActiveTab(res.keys[0].value);\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    async function tabGroups() {\n        connect.sendPromise(\"VKWebAppStorageSet\",\n            {\n                \"key\": \"ActiveTab\",\n                \"value\": \"groups\"\n            })\n            .then(() => {\n                connect.sendPromise('VKWebAppStorageGet',\n                    {\n                        'keys': ['ActiveTab']\n                    })\n                    .then((res) => {\n                        setActiveTab(res.keys[0].value);\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    const go = e => {\n        e.preventDefault();\n        const activePan = e.currentTarget.dataset.to;\n        setActivePanel(activePan);\n        setReg(false);\n\n        let id = e.currentTarget.id - 1;\n        setTargetIdGroup(id);\n        console.log('ID ДО', id);\n        setPriceIdGroup(dataGroups[id]['price']);\n        console.log('ЦЕНА ПОСЛЕ', priceIdGroup);\n\n    };\n\n    function onChangeHandlerInput(e) {\n        const value = e.target.value.trim();\n        const reg1 = /^https:|Https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*$/;\n        const reg2 = /^vk\\.com\\/(?!id\\d)[^\\/]*$/;\n\n        const regValue1 = reg1.test(value);\n        const regValue2 = reg2.test(value);\n\n        const valueSlice1 = value.slice(15);\n        const valueSlice2 = value.slice(7);\n\n\n        if (regValue1) {\n            setInput(valueSlice1);\n            setReg(true);\n        }\n        else{\n            setReg(false);\n            if (regValue2) {\n                setInput(valueSlice2);\n                setReg(true);\n            }\n            else{\n                setReg(false);\n            }\n        }\n\n\n\n\n        // connect.sendPromise(\"VKWebAppCallAPIMethod\",\n        //     {\n        //         \"method\": \"utils.resolveScreenName\",\n        //         \"request_id\": \"1\",\n        //         \"params\":\n        //             {\n        //                 \"screen_name\": valueSlice,\n        //                 \"v\": \"5.103\",\n        //                 \"access_token\":\n        //             }\n        //     }).then(res => {\n        //     if (res.response.object_id === undefined) {\n        //         setReg(false);\n        //     } else {\n        //         setInput(valueSlice);\n        //         setReg(true);\n        //     }\n        //     console.log(res.response.object_id);\n        // }).catch(error => {\n        //     console.log(error);\n        // });\n\n    }\n\n    return (\n        <View activePanel={activePanel}\n              popout={popout}\n        >\n\n            <ListMain id='list'\n                      fetchedUser={fetchedUser}\n                      go={go}\n                      pay={pay}\n                      paymentStatus={paymentStatus}\n                      activeTab={activeTab}\n                      tabUsers={tabUsers}\n                      tabGroups={tabGroups}\n                      dataUsers={dataUsers}\n                      dataGroups={dataGroups}\n            />\n            <Vkpay id='vkpay'\n                   go={go}\n                   pay={pay}\n                   onChangeHandlerInput={onChangeHandlerInput}\n                   reg={reg}\n                   payGroups={payGroups}\n            />\n        </View>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\n// Корневой элемент приложения\nconst root = document.getElementById('root');\n\n// Вызываем хелпер, передавая в аргумент корневой элемент приложения\nmVKMiniAppsScrollHelper(root);\n\n// Рендер приложения\nReactDOM.render(<App />, root);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ListUsers_button__3jVmk\",\"div\":\"ListUsers_div__1sDxj\",\"divText\":\"ListUsers_divText__1v5gJ\",\"divHome\":\"ListUsers_divHome__v_nJe\",\"divError\":\"ListUsers_divError__9ewW4\",\"bold\":\"ListUsers_bold__1q0XK\",\"listNumber\":\"ListUsers_listNumber__29dNQ\",\"listName\":\"ListUsers_listName__1YKFp\",\"listHome\":\"ListUsers_listHome__2XIpk\",\"listError\":\"ListUsers_listError__1h7v8\"};"],"sourceRoot":""}