{"version":3,"sources":["panels/Home.js","panels/Slider.js","panels/ListUsers.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","Slider","useState","slideIndex","setSlideIndex","slideWidth","align","style","height","backgroundColor","console","log","ListUsers","activeTab","setActiveTab","vertical","theme","type","selected","href","target","App","activePanel","setActivePanel","setUser","useEffect","a","connect","sendPromise","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.102a2e8a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Slider\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"slider\">\n\t\t\t\t\tСлайдер\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery';\n\n\nconst Slider = ({id, go}) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n\n    // useEffect(() => {\n    //     // document.title = `Вы нажали ${count} раз`;\n    //     return () => (\n    //         setSlideIndex(slideIndex === 2 ? slideIndex === 0 : slideIndex + 1)\n    //     )\n    // });\n\n    function showSlide() {\n        setSlideIndex(slideIndex === 2 ? 0 : slideIndex + 1);\n        console.log(slideIndex);\n    }\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Рейтинг ценителей</PanelHeader>\n            <Group title=\"Controled\">\n                <Gallery\n                    slideWidth=\"90%\"\n                    align=\"center\"\n                    style={{height: 350}}\n                    slideIndex={slideIndex}\n                    // onChange={slideIndex => setSlideIndex({slideIndex})} // если раскоментить то слайдер не работает\n                >\n                    <div style={{backgroundColor: 'var(--destructive)'}}>\n                        Здесь будет описание о самом приложении\n                    </div>\n                    <div style={{backgroundColor: 'var(--button_commerce_background)'}}>\n                        Здесь будет описание о том, как получать прибыль занимая места в рейтинге\n                    </div>\n                    <div style={{backgroundColor: 'var(--accent)'}}>\n                        Здесь будет описание о том, как выводить полученную прибыль\n                    </div>\n                </Gallery>\n                <Div>\n                    <Button onClick={showSlide}>Далее</Button>\n                    {slideIndex === 2\n                        ?\n                        <Button level=\"commerce\" onClick={go} data-to=\"list\">\n                            Попасть в ТОП\n                        </Button>\n                        :\n                        ''\n                    }\n                </Div>\n\n            </Group>\n        </Panel>\n\n    );\n};\n\n\nexport default Slider;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\n\n\n\n\nconst ListUsers = ({id, go}) => {\n    const [slideIndex, setSlideIndex] = useState(0);\n    const [activeTab, setActiveTab] = useState('users');\n    // const [activeTab2, setActiveTab2] = useState('groups');\n\n\n    // useEffect(() => {\n    //     // document.title = `Вы нажали ${count} раз`;\n    //     return () => (\n    //         setSlideIndex(slideIndex === 2 ? slideIndex === 0 : slideIndex + 1)\n    //     )\n    // });\n\n\t  function showSlide () {\n\t\t setSlideIndex(slideIndex === 2 ? 0 : slideIndex + 1);\n\t\t  console.log(slideIndex);\n\t}\n\n    function tab1 () {\n            setActiveTab('users');\n        console.log('активный таб:',activeTab);\n    }\n    function tab2 () {\n        setActiveTab('groups');\n        console.log('активный таб:',activeTab);\n    }\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Рейтинг ценителей</PanelHeader>\n            <FixedLayout vertical=\"top\">\n                <Tabs theme=\"header\" type=\"buttons\">\n                    <HorizontalScroll>\n                        <TabsItem\n                            onClick={tab1}\n                            selected={activeTab === 'users'}\n                        >\n                            Люди\n                        </TabsItem>\n                        <TabsItem\n                            onClick={tab2}\n                            selected={activeTab === 'groups'}\n                        >\n                            Сообщества\n                        </TabsItem>\n                    </HorizontalScroll>\n                </Tabs>\n            </FixedLayout>\n\n            {activeTab === 'users'\n                ?\n                <Group title=\"default\" description=\"Дефолтный стиль аватарки. Используется для юзеров, групп.\">\n                    <List>\n                        <Link href=\"https://vk.com/kirill_1131\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun1-16.userapi.com/c857632/v857632332/1ee4a/MCaddnU_Gr0.jpg?ava=1\" />}>Кирилл Андреев</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/molodzelenswezh\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun9-12.userapi.com/c847021/v847021206/1f83b8/EqYT4Ik6TKE.jpg?ava=1\" />}>Рустем Салахов</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/id34269973\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun1-17.userapi.com/vyn5tZKdwXRsqhavJi2y3JHR-BtnOkt1tfsGMQ/a7BqNxHW56s.jpg?ava=1\" />}>Родион Коклин</Cell>\n                        </Link>\n                    </List>\n                </Group>\n\n                :\n                ''\n            }\n\n            {activeTab === 'groups'\n                ?\n                <Group title=\"default\" description=\"Дефолтный стиль аватарки. Используется для юзеров, групп.\">\n                    <List>\n                        <Link href=\"https://vk.com/public187053043\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun1-15.userapi.com/c858524/v858524205/ba47/FhvWVpJwFxw.jpg?ava=1\" />}>Бесполезные вещи</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/by_duran\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun9-35.userapi.com/c627331/v627331119/26946/eNxXdmHLnRA.jpg?ava=1\" />}>Duran</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/4ch\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun9-30.userapi.com/c837133/v837133132/96fe/YEFOZ9QsMIk.jpg?ava=1\" />}>4ch inc.</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/webmland\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun1-22.userapi.com/c857028/v857028947/43738/G19s11wJb8o.jpg?ava=1\" />}>WebM</Cell>\n                        </Link>\n                        <Link href=\"https://vk.com/misanthropeshow\" target=\"_blank\">\n                            <Cell before={<Avatar src=\"https://sun9-69.userapi.com/c857328/v857328035/2ba77/ZIb8uDqloyI.jpg?ava=1\" />}>Мизантроп шоу (18+) - подкаст</Cell>\n                        </Link>\n                    </List>\n                </Group>\n                :\n                ''\n            }\n\n\n            <Group title=\"Navigation\">\n                <Div>\n                    <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"slider\">\n                        Справка\n                    </Button>\n                </Div>\n            </Group>\n        </Panel>\n\n\n    );\n};\n\n\n\nexport default ListUsers;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n// import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Slider from './panels/Slider';\nimport ListUsers from './panels/ListUsers';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('slider');\n\tconst [fetchedUser, setUser] = useState(null);\n\t// const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tconsole.log(\"VKWebAppGetUserInfo: \",user);\n\t\t\t// setPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t// {/*<View activePanel={activePanel} popout={popout}>*/}\n\treturn (\n\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Slider id='slider' go={go} />\n\t\t\t<ListUsers id='list' go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}