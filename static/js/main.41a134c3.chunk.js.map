{"version":3,"sources":["panels/ListUsers.module.sass","panels/ListItem.js","panels/ListGroup.js","panels/ListMain.js","panels/Vkpay.js","helpers/requestMethod.js","App.js","index.js"],"names":["module","exports","ListItem","idItem","first_name","last_name","avatar","price","pay","idVk","getPlatform","urlUser","className","styles","div","listNumber","listName","before","src","href","description","id","button","level","onClick","ListGroup","name","go","idVkGroup","urlGroup","data-to","ListMain","tabUsers","tabGroups","activeTab","dataUsers","test","dataGroups","useNavigatorOnline","isOffline","isOnline","renderUsers","map","item","key","id_vk","renderGroups","id_group","vertical","theme","selected","size","Vkpay","onChangeHandlerInput","reg","payGroups","hadResponse","empty","input","left","top","onChange","status","bottom","requestMethod","method","$_GET","window","location","search","replace","split","reduce","p","e","a","decodeURIComponent","axios","defaults","params","App","useState","activePanel","setActivePanel","fetchedUser","setUser","setIdUsers","paymentStatus","setPaymentStatus","setActiveTab","setInput","setDataUsers","setDataGroups","setReg","setHadResponse","targetIdGroup","setTargetIdGroup","priceIdGroup","setPriceIdGroup","popout","setPopout","setGetPlatform","async","preventDefault","targetId","currentTarget","targetIdVk","priceId","order","get","console","error","connect","sendPromise","then","res","log","result","du","data","catch","useEffect","addEventListener","response","users","groups","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","platform","keys","user","idUser","fetchData","activePan","dataset","to","history","pushState","panel","isWebView","onSwipeBack","target","trim","regValue1","regValue2","valueSlice1","slice","valueSlice2","inputValue","gu","send","root","getElementById","mVKMiniAppsScrollHelper","ReactDOM","render"],"mappings":"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","file":"static/js/main.41a134c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ListUsers_button__3jVmk\",\"btnDisabled\":\"ListUsers_btnDisabled__3GPv9\",\"div\":\"ListUsers_div__1sDxj\",\"divText\":\"ListUsers_divText__1v5gJ\",\"divHome\":\"ListUsers_divHome__v_nJe\",\"divError\":\"ListUsers_divError__9ewW4\",\"bold\":\"ListUsers_bold__1q0XK\",\"listNumber\":\"ListUsers_listNumber__29dNQ\",\"listName\":\"ListUsers_listName__1YKFp\",\"listHome\":\"ListUsers_listHome__2XIpk\",\"listError\":\"ListUsers_listError__1h7v8\"};","import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport styles from \"./ListUsers.module.sass\";\r\n\r\n\r\nconst ListItem = ({idItem, first_name, last_name, avatar, price, pay, idVk, getPlatform}) => {\r\n    const urlUser = 'https://vk.com/id' + idVk;\r\n    return (\r\n        <Div className={styles.div}>\r\n            <span className={styles.listNumber}>{idItem}</span>\r\n\r\n            {getPlatform === \"ios\"\r\n                ?\r\n                <Cell\r\n                    className={styles.listName}\r\n                    before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                    href={idVk === 0 ? '' : urlUser}\r\n                >\r\n                    {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n                </Cell>\r\n                :\r\n                <Cell\r\n                    className={styles.listName}\r\n                    before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/camera_200.png'/>}\r\n                    description={'Цена: ' + price + ' руб'}\r\n                    href={idVk === 0 ? '' : urlUser}\r\n                >\r\n                    {first_name ? first_name + \" \" + last_name : \"Место для тебя\"}\r\n                </Cell>\r\n            }\r\n\r\n\r\n            {getPlatform === \"ios\"\r\n                ?\r\n               \"\"\r\n                :\r\n                <Button id={idItem} className={styles.button} level=\"commerce\" onClick={pay}>\r\n                    Занять\r\n                </Button>\r\n            }\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n\r\n","import React from 'react';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport styles from \"./ListUsers.module.sass\";\r\n\r\nconst ListGroup = ({idItem, avatar, price, name, go, idVkGroup, getPlatform}) => {\r\n\r\n    const urlGroup = 'https://vk.com/public' + idVkGroup;\r\n\r\n    return (\r\n        <Div className={styles.div}>\r\n            <span className={styles.listNumber}>{idItem}</span>\r\n\r\n            {getPlatform === \"ios\"\r\n                ?\r\n                <Cell\r\n                    className={styles.listName}\r\n                    before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/community_200.png'/>}\r\n                    href={idVkGroup === 0 ? '' : urlGroup}\r\n                >\r\n                    {name ? name : \"Место для группы\"}\r\n                </Cell>\r\n                :\r\n                <Cell\r\n                    className={styles.listName}\r\n                    before={avatar ? <Avatar src={avatar}/> : <Avatar src='https://vk.com/images/community_200.png'/>}\r\n                    description={'Цена: ' + price + ' руб'}\r\n                    href={idVkGroup === 0 ? '' : urlGroup}\r\n                >\r\n                    {name ? name : \"Место для группы\"}\r\n                </Cell>\r\n            }\r\n\r\n\r\n            {getPlatform === \"ios\"\r\n                ?\r\n               \"\"\r\n                :\r\n                <Button id={idItem} className={styles.button} level=\"commerce\" onClick={go} data-to=\"vkpay\">\r\n                    Занять\r\n                </Button>\r\n            }\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default ListGroup;\r\n\r\n\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport {useNavigatorOnline} from '@oieduardorabelo/use-navigator-online';\nimport styles from \"../styles/custom-styles.sass\";\n\nimport ListItem from './ListItem';\nimport ListGroup from './ListGroup';\n\nconst ListMain = ({id, go, pay, tabUsers, tabGroups, activeTab, dataUsers, test, dataGroups, getPlatform}) => {\n    let {isOnline, isOffline} = useNavigatorOnline();\n\n    const renderUsers = dataUsers.map(item => {\n        return (\n            <ListItem\n                key={item.id}\n                idItem={item.id}\n                idVk={item.id_vk}\n                avatar={item.avatar}\n                price={item.price}\n                pay={pay}\n                first_name={item.first_name}\n                last_name={item.last_name}\n                test={test}\n                getPlatform={getPlatform}\n            />\n        );\n    });\n\n    const renderGroups = dataGroups.map(item => {\n        return (\n            <ListGroup\n                key={item.id}\n                idItem={item.id}\n                avatar={item.avatar}\n                price={item.price}\n                go={go}\n                name={item.name}\n                idVkGroup={item.id_group}\n                getPlatform={getPlatform}\n            />\n        );\n    });\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>\n                Рейтинг лидеров\n            </PanelHeader>\n            <FixedLayout vertical=\"top\">\n                <Tabs theme=\"header\">\n                    <HorizontalScroll>\n                        <TabsItem\n                            onClick={tabUsers}\n                            selected={activeTab === 'users'}\n                        >\n                            Люди\n                        </TabsItem>\n                        <TabsItem\n                            onClick={tabGroups}\n                            selected={activeTab === 'groups'}\n                        >\n                            Сообщества\n                        </TabsItem>\n                    </HorizontalScroll>\n                </Tabs>\n            </FixedLayout>\n\n\n            {isOffline\n                ?\n                <Div className=\"divSpinner\">\n                    <ScreenSpinner size='large'/>\n                    <Div>\n                        Отсутствует интернет - соединение!\n                    </Div>\n                </Div>\n                :\n                <>\n                    {activeTab === 'users'\n                        ?\n                        <Div className=\"divHeader\">\n                            {getPlatform === \"ios\"\n                                ?\n                                <Div>\n                                    Данный сервис не работает на устройствах с системой iOS\n                                </Div>\n                                :\n                                \"\"\n                            }\n                            <List>\n                                {renderUsers}\n                            </List>\n                        </Div>\n                        :\n                        ''\n                    }\n\n                    {activeTab === 'groups'\n                        ?\n                        <Div className=\"divHeader\"\n                        >\n                            {getPlatform === \"ios\"\n                                ?\n                                <Div>\n                                    К сожалению, данный сервис не работает на устройствах с системой iOS\n                                </Div>\n                                :\n                                \"\"\n                            }\n                            <List>\n                                {renderGroups}\n                            </List>\n                        </Div>\n                        :\n                        ''\n                    }\n                </>\n            }\n        </Panel>\n    );\n};\nListMain.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default ListMain;\n\n\n","import React, {useState, useEffect} from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\r\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\r\n\r\nconst Vkpay = ({id, go, onChangeHandlerInput, reg, payGroups, hadResponse, input}) => {\r\n\r\nconst empty = input === '';\r\n\r\n    return (\r\n        <Panel id={id} theme=\"white\">\r\n            <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"list\"/>}\r\n            >Оплата\r\n            </PanelHeader>\r\n            <Div>\r\n                <Div>Оплата через VK Pay</Div>\r\n                <FormLayout>\r\n                    <Input\r\n                        top=\"Введите ссылку на группу\"\r\n                        onChange={onChangeHandlerInput}\r\n                        // status={reg ? 'valid' : 'error'}\r\n                        status={empty ? '' : !hadResponse ? '' : reg ? 'valid' : 'error'}\r\n                        bottom={empty ? '' : !hadResponse ? '' : reg ? 'Ссылка на группу введена верно!' : 'Ссылка введена неверно'}\r\n                        // bottom={reg ? 'Ссылка на группу введена верно!' : 'Ссылка введена неверно'} &&\r\n                    >\r\n                    </Input>\r\n\r\n                    <Button size=\"xl\" onClick={payGroups}>\r\n                        Оплатить\r\n                    </Button>\r\n                </FormLayout>\r\n            </Div>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Vkpay;\r\n","function requestMethod(method) {\r\n    return \"https://rating01.ru/api/\" + method;\r\n    // return \"https://rating.local/api/\" + method;\r\n}\r\n\r\nexport default requestMethod;","import React, {useState, useEffect} from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport axios from \"axios\";\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport ListMain from './panels/ListMain';\nimport Vkpay from './panels/Vkpay';\nimport requestMethod from './helpers/requestMethod';\n// import platform from '@vkontakte/vkui';\n\nlet $_GET = window\n    .location\n    .search\n    .replace('?', '')\n    .split('&')\n    .reduce(\n        function (p, e) {\n            let a = e.split('=');\n            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n            return p;\n        },\n        {}\n    );\n\naxios.defaults.params = {\n    ...$_GET\n};\n\nfunction getNewRequestId() {\n    if (process.env.NODE_ENV === 'production') {\n        return (Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)).toString();\n    } else {\n        return \"111\"\n    }\n}\n\nexport function apiRequest(method, params = {}, accessToken = '', successCallback = undefined, errorCallback = undefined) {\n    let requestId = getNewRequestId();\n    if (successCallback !== undefined || errorCallback !== undefined) {\n        let clb = function callback(e) {\n            let vkEvent = e.detail;\n            if (!vkEvent) {\n                console.error('invalid event', e);\n                return;\n            }\n\n            let type = vkEvent['type'];\n            let data = vkEvent['data'];\n\n            let found = false;\n            if ('VKWebAppCallAPIMethodResult' === type && data['request_id'] === requestId) {\n                if (successCallback !== undefined) {\n                    successCallback(data['response']);\n                }\n                found = true;\n            } else if ('VKWebAppCallAPIMethodFailed' === type && data['request_id'] === requestId) {\n                if (errorCallback !== undefined) {\n                    errorCallback(data);\n                }\n                found = true;\n            }\n            if (found) {\n                connect.unsubscribe(clb);\n            }\n        };\n        connect.subscribe(clb);\n    }\n\n    params['access_token'] = accessToken;\n\n    if (params['v'] === undefined) {\n        params['v'] = 5.103;\n    }\n\n    connect.send('VKWebAppCallAPIMethod', {\n        'method': method,\n        'params': params,\n        'request_id': requestId\n    });\n}\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('list');\n    const [fetchedUser, setUser] = useState(null);\n    const [idUsers, setIdUsers] = useState(0);\n    const [paymentStatus, setPaymentStatus] = useState(false);\n    const [activeTab, setActiveTab] = useState('users');\n    const [input, setInput] = useState('');\n    const [dataUsers, setDataUsers] = useState([]);\n    const [dataGroups, setDataGroups] = useState([]);\n    // const [token, setToken] = useState(null);\n    // const [statusToken, setStatusToken] = useState(true);\n    const [reg, setReg] = useState();\n    const [hadResponse, setHadResponse] = useState(false);\n    const [targetIdGroup, setTargetIdGroup] = useState(0);\n    const [priceIdGroup, setPriceIdGroup] = useState(0);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [getPlatform, setGetPlatform] = useState(\"\");\n    const [history, setHistory] = useState(['list']);\n\n\n    useEffect(() => {\n        window.addEventListener('popstate', e => e.preventDefault() & menu(e));\n    }, []);\n\n    function menu (e) {\n        setActivePanel('list');\n        setInput('');\n    }\n\n    useEffect(() => {\n        axios.get(requestMethod(\"sys.first\"), {})\n            .then(res => {\n                if (res.data.error) { // вывод ошибки если пришли неполные данные\n                    console.log('ОШИБКА ДАННЫХ ГРУПП:', res.data.error);\n                    return;\n                }\n\n                console.log(res);\n\n                setDataUsers(res.data.response.users);\n                setDataGroups(res.data.response.groups);\n\n            }).catch(error => {\n            console.log(error);\n        });\n    }, []);\n\n\n    useEffect(() => {\n        connect.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        connect.sendPromise('VKWebAppGetClientVersion',\n        ).then(res => {\n            console.log(\"ВЕРСИЯ ПРИЛОЖЕНИЯ:\", res);\n            if (res.platform === \"ios\") {\n                setGetPlatform(\"ios\");\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n            const idUser = user.id;\n            setIdUsers(idUser);\n            setPopout(null);\n        }\n\n        connect.sendPromise('VKWebAppStorageGet',\n            {\n                'keys': ['ActiveTab', 'activePanel', 'button']\n            })\n            .then((res) => {\n                setActiveTab(res.keys[0].value);\n                // console.log('setActivePanel: ', res.keys[1].value);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        fetchData();\n    }, []);\n\n    async function pay(e) {\n        e.preventDefault();\n        const targetId = e.currentTarget.id - 1;\n        const targetIdVk = fetchedUser.id;\n        const priceId = dataUsers[targetId]['price'];\n\n        let order = {};\n        try {\n            order = await axios.get(requestMethod(\"list.addOrderUser\"), {\n                params: {\n                    id: targetId + 1\n                }\n            });\n        } catch (error) {\n            console.error(error);\n        }\n\n        connect.sendPromise('VKWebAppOpenPayForm', {\n            \"app_id\": 7217737,\n            \"action\": \"pay-to-group\",\n            \"params\": {\n                \"amount\": priceId,\n                \"group_id\": 189974647  // 189804850  // 189974647\n            }\n        }).then(res => {\n            console.log('RES_USERS:', res);\n            if (res.status || res.result.status) {\n                setPaymentStatus(true);\n                console.log('ОПЛАТА ПРОШЛА 1');\n\n                console.log(res);\n\n                console.log('Id_Users_updateUsersList:', targetIdVk);\n                setActivePanel('list');\n                console.log('ОПЛАТА ПРОШЛА: 2', dataUsers);   // выводит список\n\n\n                let du = [...dataUsers];\n                du[targetId] = {\n                    ...du[targetId],\n                    'id_vk': fetchedUser['id'],\n                    'first_name': fetchedUser['first_name'],\n                    'last_name': fetchedUser['last_name'],\n                    'avatar': fetchedUser['photo_200'],\n                    'price': order.data['response']['price']\n                };\n                setDataUsers(du);\n            }\n            console.log(res.status); // работает\n        }).catch(error => {\n            console.log(error);\n\n        });\n    }\n\n    async function payGroups(e) {\n        e.preventDefault();\n        const inputValue = input;\n        console.log(\"inputValue\", inputValue);\n        setHadResponse(true);\n\n        axios.get(requestMethod(\"sys.checkGroup\"), {\n            params: {\n                id_group: inputValue\n            }\n        }).then(async res => {\n            console.log(res);\n            if (res.data.error) { // вывод ошибки если пришли неполные данные\n                console.log(res.data.error);\n                setReg(false);\n                return;\n            }\n            let order = {};\n            try {\n                order = await axios.get(requestMethod(\"list.addOrderGroup\"), {\n                    params: {\n                        id: targetIdGroup + 1,\n                        id_group: res.data.response.id\n                    }\n                });\n            } catch (error) {\n                console.error(error);\n            }\n\n                console.log(\"checkGroup\", res);\n                setReg(true);\n\n\n            connect.sendPromise('VKWebAppOpenPayForm', {\n                \"app_id\": 7217737,\n                \"action\": \"pay-to-group\",\n                \"params\": {\n                    \"amount\": priceIdGroup,\n                    \"group_id\": 189974647,   // 189974647\n                    \"data\": {\n                        \"my_sign\": \"dsfdsffds\"\n                    },\n                    \"sign\": \"sadsaas\"\n                }\n            }).then(res => {\n                if (res.status || res.result.status) {\n                    setPaymentStatus(true);\n                    console.log('ОПЛАТА ПРОШЛА 1');\n                    console.log('Id_Group_updateGroupsList:', input);\n\n                    console.log('ОПЛАТА ПРОШЛА: 2', dataGroups);   // выводит список\n\n\n                    let gu = [...dataGroups];\n                    gu[targetIdGroup] = {\n                        ...gu[targetIdGroup],\n                        'id_group': inputValue,\n                        'name': order.data['response']['group']['name'],\n                        'avatar': order.data['response']['group']['photo_200'],\n                        'price': order.data['response']['price']\n                    };\n\n                    setDataGroups(gu);\n                    setActivePanel('list');\n                    // setInput('');\n                }\n                console.log(res.status); // работает\n            }).catch(error => {\n                console.log(error);\n                // setInput('');\n                setReg();\n                setHadResponse(false);\n                console.log(\"INPUT 3\",input);\n            });\n\n        }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n\n    async function tabUsers() {\n        connect.sendPromise(\"VKWebAppStorageSet\",\n            {\n                \"key\": \"ActiveTab\",\n                \"value\": \"users\"\n            })\n            .then(() => {\n                connect.sendPromise('VKWebAppStorageGet',\n                    {\n                        'keys': ['ActiveTab']\n                    })\n                    .then((res) => {\n                        setActiveTab(res.keys[0].value);\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    async function tabGroups() {\n        connect.sendPromise(\"VKWebAppStorageSet\",\n            {\n                \"key\": \"ActiveTab\",\n                \"value\": \"groups\"\n            })\n            .then(() => {\n                connect.sendPromise('VKWebAppStorageGet',\n                    {\n                        'keys': ['ActiveTab']\n                    })\n                    .then((res) => {\n                        setActiveTab(res.keys[0].value);\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    const go = e => {\n        e.preventDefault();\n        const activePan = e.currentTarget.dataset.to;\n        setActivePanel(activePan);\n        // setReg(false);\n        window.history.pushState( { panel: e.currentTarget.dataset.to }, `${e.currentTarget.dataset.to}` );\n\n        // const historyGo = [...history];\n        // historyGo.push(activePanel);\n        // if (activePanel === \"list\") {\n        //     connect.send(\"VKWebAppEnableSwipeBack\");\n        // }\n\n        let id = e.currentTarget.id - 1;\n        setTargetIdGroup(id);\n        console.log('ID ДО', id);\n        setPriceIdGroup(dataGroups[id]['price']);\n        console.log('ЦЕНА ПОСЛЕ', priceIdGroup);\n        setInput('');\n    };\n\n    const goBack = () => {\n        setActivePanel('list');\n    };\n\n\n    function onChangeHandlerInput(e) {\n        const value = e.target.value.trim();\n        // const reg1 = /^https:|Https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*$/;\n        const reg1 = /^https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*|Https:\\/\\/vk\\.com\\/(?!id\\d)[^\\/]*$/;\n        const reg2 = /^vk\\.com\\/(?!id\\d)[^\\/]*$/;\n\n        const regValue1 = reg1.test(value);\n        const regValue2 = reg2.test(value);\n\n        const valueSlice1 = value.slice(15);\n        const valueSlice2 = value.slice(7);\n\n\n        console.log('valueSlice1:', valueSlice1);   // выводит список\n        console.log('valueSlice2:', valueSlice2);   // выводит список\n\n        if (regValue1) {\n            setInput(valueSlice1);\n            // setReg(true);\n        } else {\n            setReg(false);\n            if (regValue2) {\n                setInput(valueSlice2);\n                // setReg(true);\n            } else {\n                // setReg(false);\n            }\n        }\n\n\n        // connect.sendPromise(\"VKWebAppCallAPIMethod\",\n        //     {\n        //         \"method\": \"utils.resolveScreenName\",\n        //         \"request_id\": \"1\",\n        //         \"params\":\n        //             {\n        //                 \"screen_name\": valueSlice,\n        //                 \"v\": \"5.103\",\n        //                 \"access_token\":\n        //             }\n        //     }).then(res => {\n        //     if (res.response.object_id === undefined) {\n        //         setReg(false);\n        //     } else {\n        //         setInput(valueSlice);\n        //         setReg(true);\n        //     }\n        //     console.log(res.response.object_id);\n        // }).catch(error => {\n        //     console.log(error);\n        // });\n\n    }\n\n    return (\n\n\n        <ConfigProvider isWebView={true}>\n            <View activePanel={activePanel}\n                  popout={popout}\n                  onSwipeBack={goBack}\n            >\n\n                <ListMain id='list'\n                          fetchedUser={fetchedUser}\n                          go={go}\n                          pay={pay}\n                          paymentStatus={paymentStatus}\n                          activeTab={activeTab}\n                          tabUsers={tabUsers}\n                          tabGroups={tabGroups}\n                          dataUsers={dataUsers}\n                          dataGroups={dataGroups}\n                          getPlatform={getPlatform}\n                />\n                <Vkpay id='vkpay'\n                       go={go}\n                       pay={pay}\n                       onChangeHandlerInput={onChangeHandlerInput}\n                       reg={reg}\n                       hadResponse={hadResponse}\n                       payGroups={payGroups}\n                       activePanel={activePanel}\n                       input={input}\n                />\n            </View>\n        </ConfigProvider>\n\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\n// Корневой элемент приложения\nconst root = document.getElementById('root');\n\n// Вызываем хелпер, передавая в аргумент корневой элемент приложения\nmVKMiniAppsScrollHelper(root);\n\n// Рендер приложения\nReactDOM.render(<App />, root);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}